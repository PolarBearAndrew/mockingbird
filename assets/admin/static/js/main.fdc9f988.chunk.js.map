{"version":3,"sources":["const/menu.ts","components/comm/Menu.tsx","logo.svg","const/color.ts","components/comm/NavBar.tsx","components/comm/Typing.tsx","pages/DocumentPage.tsx","components/comm/PageHeader.tsx","utils/notify.ts","components/mockers/MockerForm.tsx","const/envoy.ts","components/comm/HttpStatusCode.tsx","components/comm/JSONBeautify.tsx","store/mockers.ts","config.ts","api/mockers.ts","components/mockers/MockerItem.tsx","store/proxies.ts","components/mockers/MockerList.tsx","api/proxies.ts","components/proxies/ProxyItem.tsx","components/proxies/ProxyList.tsx","pages/ProxyAndMockersPage.tsx","App.tsx","index.tsx"],"names":["MENU","path","title","MenuList","Item","Menu","style","width","height","defaultSelectedKeys","mode","map","item","i","exact","to","BASE_BLUE","BASE_PINK","LIGHT_GRAY","CODE_GRAY","FRONT_WHITE","NavBar","Header","Layout","display","alignItems","justifyContent","padding","AppLogo","src","Logo","alt","AppName","styled","img","h1","Container","div","BlinkCursor","span","p","blink","Typing","props","useState","idx","text","direction","showing","setShowing","list","sentenceDelay","typingDelay","sentenceShowTime","backspaceDelay","render","useCallback","length","setTimeout","substring","useEffect","BannerContainer","LogoImg","AppTitle","Slogan","StartBtn","HomePage","backgroundColor","color","marginRight","ghost","size","PageHeader","Title","Typography","margin","notifier","reduce","m","key","msg","desc","type","message","description","notification","duration","Option","Select","getSubmitText","action","Error","MockerForm","Text","data","setData","setDataByKey","val","id","onClose","visible","bodyStyle","paddingBottom","footer","textAlign","createBy","onClick","onComplete","layout","hideRequiredMark","gutter","name","label","initialValue","reqMethod","rules","required","placeholder","onChange","value","resStatus","e","parseInt","target","error","warning","prefix","addonBefore","resBody","TextArea","rows","checkedChildren","unCheckedChildren","checked","status","s","defaultChecked","HttpStatusCode","code","tag","Math","floor","placement","MockersActionType","JSONBeautifier","fontSize","theme","main","string","boolean","jsonStr","config","listMockers","a","axios","get","res","console","mockers","updateMocker","put","omit","createMocker","post","JSON","stringify","deleteMocker","delete","mockersReducerInit","mockersReducer","origin","RefreshList","Array","isArray","payload","UpdateMocker","AddMocker","RemoveMocker","filter","ProxiesActionType","MockerTagWrapper","MockerTag","MockerItemResBody","MockerItem","dispatch","mocker","mockerDispatcher","toggleMockersAction","nextStatus","success","mockerStatus","strong","LoadingOutlined","spin","hoverable","bordered","extra","marginBottom","opacity","actions","DeleteOutlined","onDeleteBtnClick","EditOutlined","onEditBtnClick","split","str","MockerList","listProxies","proxies","proxiesReducerInit","proxiesReducer","UpdateProxy","AddProxy","RemoveProxy","ProxyTagWrapper","ProxyTag","ProxyItem","proxy","proxyStatus","disabled","ProxyList","DefaultMocker","ControlPanel","ProxyAndMockersPage","useReducer","proxyDispatcher","listLoading","setListLoading","refreshProxyAction","refreshMockerAction","genRefreshMockersAction","genCreateMockersAction","genUpdateMockersAction","mockerId","genDeleteMockersAction","mockerFormState","setMockerFormState","shape","icon","PlusOutlined","loading","RedoOutlined","orientation","find","App","Sider","Content","Footer","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fdc9f988.chunk.js","sourcesContent":["\nexport interface IMenu {\n  path: string;\n  title: string;\n  desc?: string;\n  icon?: any;\n}\n\nexport const MENU: IMenu[] = [\n  {\n    path: '/admin/routes',\n    title: 'Proxy & Mockers'\n  },\n  {\n    path: '/admin/docs',\n    title: 'Documents'\n  }\n];\n","import React from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport { Menu } from 'antd'\nimport { MENU } from '../../const/menu';\n\nexport default function MenuList() {\n  const { Item } = Menu;\n  return (\n    <Menu\n      style={{ width: 256, height: '100%' }}\n      defaultSelectedKeys={[MENU[0].path]}\n      mode='inline'>\n      {MENU.map((item, i) => (\n        <Item key={item.path} title={item.title}>\n          <NavLink key={i} exact to={item.path}>\n            {item.title}\n          </NavLink>\n        </Item>\n      ))}\n    </Menu>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo.4e3ea0cf.svg\";","\nexport const BASE_BLUE = '#001529'\n\nexport const BASE_PINK = '#b457a0'\n\nexport const LIGHT_GRAY = '#676669'\n\nexport const CODE_GRAY = '#282c34'\n\nexport const FRONT_WHITE = 'white';\nexport const FRONT_ORANGE = 'orange'","import React from 'react';\nimport styled from 'styled-components'\nimport { Layout } from 'antd';\nimport Logo from '../../logo.svg';\nimport { FRONT_WHITE } from '../../const/color';\nimport { NavLink } from \"react-router-dom\";\n\nexport default function NavBar() {\n  const { Header } = Layout\n  return (\n    <Header style={{\n      display: \"flex\",\n      alignItems: 'center',\n      justifyContent: 'left',\n      padding: '0 18px'\n    }}>\n      <NavLink to='/admin'>\n        <AppLogo src={Logo} alt='' />\n      </NavLink>\n      <NavLink to='/admin'>\n        <AppName> Mockingbird </AppName>\n      </NavLink>\n    </Header>\n  );\n}\n\nconst AppLogo = styled.img`\n  width: 50px;\n  height: 50px;\n`;\n\nconst AppName = styled.h1`\n  margin: 12px 12px 12px 5px;\n  color: ${FRONT_WHITE};\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  list: string[];\n  typingDelay: number;\n  sentenceDelay: number;\n  sentenceShowTime: number;\n  backspaceDelay: number;\n}\n\nfunction Typing(props: Props) {\n\n  const [showing, setShowing] = useState({ idx: 0, text: '', direction: 1 })\n  const {\n    list,\n    sentenceDelay,\n    typingDelay,\n    sentenceShowTime,\n    backspaceDelay,\n  } = props;\n\n  const render = useCallback(() => {\n    if (showing.direction === -1 && showing.text.length === 0) {\n      setTimeout(() => {\n        setShowing({\n          direction: 1,\n          text: '',\n          idx: (showing.idx < (list.length - 1)\n            ? showing.idx + 1\n            : 0)\n        })\n      }, sentenceDelay);\n      return;\n    }\n\n    if (showing.text.length === list[showing.idx].length) {\n      setTimeout(() => {\n        setShowing({\n          idx: showing.idx,\n          direction: -1,\n          text: list[showing.idx].substring(0, showing.text.length - 1),\n        })\n      }, sentenceShowTime)\n      return;\n    }\n\n    setTimeout(() => {\n      setShowing({\n        idx: showing.idx,\n        direction: showing.direction,\n        text: list[showing.idx].substring(0, showing.text.length + showing.direction),\n      })\n    }, showing.direction === 1 ? typingDelay : backspaceDelay)\n  }, [\n    list,\n    sentenceDelay,\n    typingDelay,\n    sentenceShowTime,\n    backspaceDelay,\n    showing.direction,\n    showing.idx,\n    showing.text.length\n  ])\n\n  useEffect(() => { setTimeout(render, 0) }, [render]);\n\n  return (\n    <Container>\n      {showing.text}\n      <BlinkCursor blink={showing.text.length === props.list[showing.idx].length}>|</BlinkCursor>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst BlinkCursor = styled.span<{ blink: boolean }>`\n  animation: ${(p) => p.blink ? 'blinker .8s step-start infinite' : 'none'};\n  @keyframes blinker {\n    50% { opacity: 0; };\n  }\n`;\n\nexport default Typing;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\nimport { Layout, Button } from 'antd'\nimport { BASE_BLUE, BASE_PINK, FRONT_WHITE } from '../const/color';\nimport Logo from '../logo.svg'\nimport Typing from '../components/comm/Typing';\n\nfunction HomePage() {\n  return (\n    <BannerContainer>\n      <Layout>\n        <Layout.Header style={{ backgroundColor: BASE_PINK }} />\n      </Layout>\n      <LogoImg src={Logo} alt='' />\n      <AppTitle>Mockingbrid</AppTitle>\n      <Slogan>\n        <span style={{ color: BASE_PINK, marginRight: 12 }}>Mockingbird</span>\n        <span style={{ marginRight: 12 }}>your</span>\n        <div>\n          <Typing\n            typingDelay={80}\n            backspaceDelay={40}\n            sentenceShowTime={2000}\n            sentenceDelay={600}\n            list={[\n              'API drafts.',\n              'developing APIs.',\n              'chaos test.',\n              'canary update.',\n              'alpha release.'\n            ]} />\n        </div>\n      </Slogan>\n      <NavLink to='/admin/routes'>\n        <StartBtn>\n          <Button ghost size='large'>Get Start</Button>\n        </StartBtn>\n      </NavLink>\n    </BannerContainer>\n  );\n}\n\nconst BannerContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  color: ${FRONT_WHITE};\n  text-align: center;\n\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  height: 100%;\n  background-color: ${BASE_BLUE};\n  > * {\n    background-color: ${BASE_BLUE};\n  }\n`;\n\nconst LogoImg = styled.img`\n  width: 18%;\n  margin: 0 auto;\n  flex-grow: 1;\n`;\n\nconst AppTitle = styled.div`\n  font-size: 5em;\n`;\n\nconst Slogan = styled.div`\n  margin-left: calc(50% - 275px);\n  flex-grow: 1;\n  font-size: 3em;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst StartBtn = styled.div`\n  flex-grow: 3;\n  padding: 80px 0 180px 0; \n`;\n\nexport default HomePage;\n","import React from 'react';\nimport { Typography } from 'antd';\n\nfunction PageHeader(props: { title: string }) {\n  if (!props.title) {\n    return null\n  }\n  const { Title } = Typography;\n  return (\n    <Title style={{ margin: '24px 0 12px 0' }}>\n      {props.title}\n    </Title>\n  );\n}\n\nexport default PageHeader;\n","\nimport { notification } from 'antd';\nimport { IconType } from 'antd/lib/notification';\n\ntype Notifier = (msg: string, desc: string) => void\n\ninterface Notify {\n  success: Notifier;\n  info: Notifier;\n  error: Notifier;\n  warning: Notifier;\n}\n\nconst notifyWithIcon = (type: IconType, message: string, description: string) => notification[type]({ message, description, duration: 20 });\n\nexport const n = ['success', 'info', 'error', 'warning'].reduce((m, key) => {\n  m[key] = (msg: string, desc: string) =>  notifyWithIcon(key as IconType, msg, desc)\n  return m;\n}, {} as { [key: string]: Notifier})\n\nexport const notifier = n as any as Notify;\n","import React, { useState } from 'react';\nimport { Drawer, Form, Button, Col, Row, Input, Select, Switch, Typography } from 'antd';\nimport { IMocker } from '../../interfaces/Mocker';\nimport { ProxyHost } from '../../const/envoy';\nimport { notifier } from '../../utils/notify';\n\nconst { Option } = Select;\n\ninterface Props {\n  data: IMocker;\n  visible: boolean;\n  action: 'toCreate' | 'toUpdate';\n  onClose: () => void;\n  onComplete: (data: IMocker) => void;\n}\n\nfunction getSubmitText(action: 'toCreate' | 'toUpdate'): string {\n  switch (action) {\n    case 'toCreate':\n      return 'Create';\n    case 'toUpdate':\n      return 'save';\n    default:\n      throw new Error('unknown action')\n  }\n}\n\nexport default function MockerForm(props: Props) {\n  const { Text } = Typography;\n  const [data, setData] = useState<IMocker>(props.data)\n  const setDataByKey = (key: keyof IMocker) => (val: any) => setData({ ...data, [key]: val })\n\n  return (\n    <Drawer\n      title={props.action === 'toCreate' \n        ? \"Create a new mocker endpoint\"\n        : `Update mocker ${props.data.id}`}\n      width={720}\n      onClose={props.onClose}\n      visible={props.visible}\n      bodyStyle={{ paddingBottom: 80 }}\n      footer={\n        <div style={{ textAlign: 'right' }}>\n          <Text type='secondary' style={{ marginRight: 8 }}>Last update by {props.data.createBy || 'AndrewChen'}</Text>\n          <Button onClick={props.onClose} style={{ marginRight: 8 }}>Cancel</Button>\n          <Button onClick={() => props.onComplete(data)} type=\"primary\">{getSubmitText(props.action)}</Button>\n        </div>\n      }>\n      <Form layout=\"vertical\" hideRequiredMark>\n        <Row gutter={16}>\n          <Col span={12}>\n            <Form.Item\n              name=\"reqMethod\"\n              label=\"Method\"\n              initialValue={data.reqMethod}\n              rules={[{ required: true, message: 'Please select an HTTP method' }]}>\n              <Select placeholder=\"Please select an HTTP method\" onChange={setDataByKey('reqMethod')}>\n                <Option value=\"GET\">GET</Option>\n                <Option value=\"POST\">POST</Option>\n                <Option value=\"PUT\">PUT</Option>\n                <Option value=\"DELETE\">DELETE</Option>\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item\n              name=\"resStatus\"\n              label=\"HTTP status code\"\n              initialValue={data.resStatus}\n              rules={[{ required: true, message: 'Please enter the HTTP status' }]}>\n              <Input\n                placeholder=\"200/201/403/404/500\"\n                onChange={(e) => {\n                  try {\n                    setDataByKey('resStatus')(parseInt(e.target.value, 10))\n                  } catch (error) {\n                    notifier.warning('Response status should be a number.', '200/201/403/404/500')\n                  }\n                }} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"prefix\"\n              label=\"Prefix\"\n              initialValue={data.prefix}\n              rules={[{ required: true, message: 'Please enter endpoint prefix' }]}>\n              <Input\n                style={{ width: '100%' }}\n                addonBefore={ProxyHost}\n                onChange={(e) => setDataByKey('prefix')(e.target.value)}\n                placeholder=\"/api/test/123\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"resBody\"\n              label=\"Response body\"\n              initialValue={data.resBody}\n              rules={[\n                {\n                  required: true,\n                  message: 'Enter the mock JSON you want.',\n                },\n              ]}>\n              <Input.TextArea\n                rows={8}\n                onChange={(e) => setDataByKey('resBody')(e.target.value)}\n                placeholder='{ \"demo\": true }' />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={24}>\n            <Form.Item\n              name=\"desc\"\n              label=\"Description\"\n              initialValue={data.desc}\n              rules={[\n                {\n                  required: true,\n                  message: 'please enter some descriptions',\n                },\n              ]}>\n              <Input.TextArea\n                rows={8}\n                onChange={(e) => setDataByKey('desc')(e.target.value)}\n                placeholder=\"please enter some descriptions\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Form.Item>\n              <Switch\n                checkedChildren=\"active\"\n                unCheckedChildren=\"inactive\"\n                checked={data.status === 'active'}\n                onChange={(s: boolean) => setDataByKey('status')(s ? 'active' : 'inactive')}\n                defaultChecked />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Drawer>\n  );\n}\n","\nexport const ProxyHost = 'http://localhost:10001'","\nimport React from 'react';\nimport { Tag, Tooltip } from 'antd';\n\nfunction HttpStatusCode(props: { code: number }) {\n  if (!props.code) {\n    return null\n  }\n\n  let tag;\n\n  switch (Math.floor(props.code/100)*100) {\n    case 200:\n      tag = (<Tag color='green'>{props.code}</Tag>);\n      break;\n    case 400:\n      tag = (<Tag color='orange'>{props.code}</Tag>);\n      break;\n    case 500:\n      tag = (<Tag color='red'>{props.code}</Tag>);\n      break;\n    default:\n      tag = (<Tag>{props.code}</Tag>);\n      break;\n  }\n\n  return (\n    <Tooltip placement=\"top\" title='HTTP status code'>\n      {tag}\n    </Tooltip>\n  )\n  \n}\n\nexport default HttpStatusCode;\n","import React from 'react';\nimport styled from 'styled-components'\nimport JSONPretty from 'react-json-pretty';\nimport { CODE_GRAY, FRONT_WHITE, LIGHT_GRAY } from '../../const/color';\n\nfunction JSONBeautifier(props: { jsonStr: string }) {\n  return (\n    <Container>\n      <JSONPretty\n        id=\"json-pretty\"\n        style={{ fontSize: \".9em\" }}\n        theme={{\n          main: `line-height:1.3;color:${LIGHT_GRAY};background:${CODE_GRAY};overflow:auto;`,\n          error: `line-height:1.3;color:${LIGHT_GRAY};background:${CODE_GRAY};overflow:auto;`,\n          key: 'color:#d19130;',\n          string: 'color:#91ba45;',\n          value: `color:${FRONT_WHITE};`,\n          boolean: 'color:#cc4954;',\n        }}\n        data={props.jsonStr}>\n      </JSONPretty>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  padding: 16px 12px 2px 12px;\n  margin: 4px 0;\n  border-radius: 8px;\n  min-width: 400px;\n  max-width: 800px;\n  background-color: ${CODE_GRAY}\n`;\n\nexport default JSONBeautifier;\n","import { Dispatch } from 'react';\nimport { createMocker, deleteMocker, listMockers, updateMocker } from '../api/mockers';\nimport { IMocker } from \"../interfaces/Mocker\";\nimport { notifier } from '../utils/notify';\n\nenum MockersActionType {\n  RefreshList,\n  UpdateMocker,\n  AddMocker,\n  RemoveMocker,\n}\n\ntype Action = {\n  type: MockersActionType.RefreshList;\n  payload: IMocker[];\n} | {\n  type: MockersActionType.UpdateMocker;\n  payload: IMocker;\n} | {\n  type: MockersActionType.AddMocker;\n  payload: IMocker;\n} | {\n  type: MockersActionType.RemoveMocker;\n  payload: { id: number }\n}\n\nexport type MockerDispatcher = Dispatch<Action>\n\n// reducer create method\nexport function mockersReducerInit(): IMocker[] {\n  return []\n}\n\nexport function mockersReducer(origin: IMocker[], action: Action): IMocker[] {\n  switch (action.type) {\n    case MockersActionType.RefreshList:\n      if (!Array.isArray(action.payload)) {\n        return [];\n      }\n      return [...action.payload];\n    case MockersActionType.UpdateMocker:\n      return origin.map((m) => m.id === action.payload.id ? action.payload : m);\n    case MockersActionType.AddMocker:\n      return [action.payload, ...origin];\n    case MockersActionType.RemoveMocker:\n      return origin.filter((m) => m.id !== action.payload.id);\n    default:\n      throw new Error();\n  }\n}\n\n// operator methods\nexport function genRefreshMockersAction(dispatch: MockerDispatcher): () => Promise<void> {\n  return async () => {\n    const res = await listMockers();\n    dispatch({\n      type: MockersActionType.RefreshList,\n      payload: res.mockers\n    });\n  };\n}\n\nexport function genToggleMockersAction(dispatch: MockerDispatcher): (m: IMocker) => Promise<void> {\n  return async (m: IMocker) => {\n    dispatch({\n      type: MockersActionType.UpdateMocker,\n      payload: { ...m, status: 'updating' }\n    });\n\n    const nextStatus = m.status === 'active' ? 'inactive' : 'active';\n    const res = await updateMocker({ ...m, status: nextStatus });\n    \n    if (res.mocker) {\n      // TODO: check envoy status\n      notifier.success(\n        `Successfully update mocker status to ${nextStatus}.`,\n        'Please wait few second for the backend service to update the Envoy proxy.'\n      )\n      dispatch({\n        type: MockersActionType.UpdateMocker,\n        payload: { ...res.mocker }\n      });\n    } else {\n      dispatch({\n        type: MockersActionType.UpdateMocker,\n        payload: { ...m }\n      });\n    }\n  }\n}\n\nexport function genUpdateMockersAction(dispatch: MockerDispatcher): (m: IMocker) => Promise<boolean> {\n  return async (m: IMocker) => {\n    dispatch({\n      type: MockersActionType.UpdateMocker,\n      payload: { ...m, status: 'updating' }\n    });\n\n    const res = await updateMocker({ ...m });\n\n    if (!res.mocker) {\n      dispatch({\n        type: MockersActionType.UpdateMocker,\n        payload: { ...m }\n      });\n      return false\n    }\n\n    // TODO: check envoy status\n    notifier.success(\n      `Successfully update mocker.`,\n      'Please wait few second for the backend service to update the Envoy proxy.'\n    )\n    dispatch({\n      type: MockersActionType.UpdateMocker,\n      payload: { ...res.mocker }\n    });\n    return true;\n  }\n}\n\nexport function genCreateMockersAction(dispatch: MockerDispatcher): (m: IMocker) => Promise<boolean> {\n  return async (m: IMocker) => {\n    const res = await createMocker({ ...m });\n    if (!res.mocker) {\n      return false\n    }\n    // TODO: check envoy status\n    notifier.success(\n      `Successfully create a new mocker.`,\n      'Please wait few second for the backend service to update the Envoy proxy.'\n    )\n    dispatch({\n      type: MockersActionType.AddMocker,\n      payload: { ...res.mocker }\n    });\n    return true;\n  }\n}\n\nexport function genDeleteMockersAction(dispatch: MockerDispatcher): (mockerId: number) => Promise<boolean> {\n  return async (mockerId: number) => {\n    const success = await deleteMocker(mockerId);\n    // TODO: check envoy status\n    if (!success) {\n      return false;\n    }\n    notifier.success(\n      `Successfully create a new mocker.`,\n      'Please wait few second for the backend service to update the Envoy proxy.'\n    );\n    dispatch({ type: MockersActionType.RemoveMocker, payload: { id: mockerId } });\n    return true;\n  }\n}\n","\nexport const config = {\n  host: 'http://localhost:3000'\n}","import axios from \"axios\";\nimport omit from 'lodash/omit'\nimport { notifier } from '../utils/notify'\nimport {config} from '../config';\nimport { IListMockerRes, IMocker, IUpdateMockerRes } from \"../interfaces/Mocker\";\n\nexport async function listMockers(): Promise<IListMockerRes> {\n  try {\n    const res = await axios.get(`${config.host}/api/mocker`)\n    return res.data\n  } catch (err) {\n    console.error(err);\n    notifier.error('listMockers failed', err.message)\n    return { mockers: [] };\n  }\n}\n\nexport async function updateMocker(m: IMocker): Promise<IUpdateMockerRes> {\n  try {\n    const res = await axios.put(`${config.host}/api/mocker/${m.id}`, {...omit(m, 'id')})\n    return res.data\n  } catch (err) {\n    console.error('update failed', err)\n    notifier.error('update failed', err.message)\n    return {};\n  }\n}\n\nexport async function createMocker(m: IMocker): Promise<IUpdateMockerRes> {\n  try {\n    const res = await axios.post(`${config.host}/api/mocker`, { ...m })\n    return res.data\n  } catch (err) {\n    console.error('create failed', err, JSON.stringify(err))\n    notifier.error('create failed', err.message)\n    return {};\n  }\n}\n\nexport async function deleteMocker(id: number): Promise<boolean> {\n  try {\n    await axios.delete(`${config.host}/api/mocker/${id}`)\n    return true;\n  } catch (err) {\n    console.error('delete failed', err, JSON.stringify(err))\n    notifier.error('delete failed', err.message)\n    return false;\n  }\n}","import React from 'react';\nimport styled from 'styled-components'\nimport { Typography, Card, Tag } from 'antd'\nimport { IMocker } from '../../interfaces/Mocker';\nimport HttpStatusCode from '../comm/HttpStatusCode';\nimport JSONBeautifier from '../comm/JSONBeautify';\nimport { EditOutlined, LoadingOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { genToggleMockersAction, MockerDispatcher } from '../../store/mockers';\nimport { notifier } from '../../utils/notify';\n\ninterface Props {\n  mocker: IMocker;\n  mockerDispatcher: MockerDispatcher;\n  onEditBtnClick: (mockerId: number) => void\n  onDeleteBtnClick: (mockerId: number) => void\n}\n\nfunction MockerItem(props: Props) {\n  const { Text } = Typography;\n  const { mocker, mockerDispatcher } = props;\n  const toggleMockersAction = genToggleMockersAction(mockerDispatcher)\n  const desc = mocker.desc || 'This mockers doesn\\'t have any descriptions';\n\n  const mockerStatus = mocker.status === 'active'\n    ? <Text strong type='success'>Active</Text>\n    : mocker.status === 'inactive'\n      ? <Text>Inactive</Text>\n      : mocker.status === 'updating'\n        ? <LoadingOutlined style={{ fontSize: 13 }} spin />\n        : <Text type='danger'>unknown</Text>\n\n  return (\n    <Card \n      hoverable\n      bordered={false}\n      extra={(\n        <div\n          style={{padding: '4px 12px'}}\n          onClick={() => toggleMockersAction(mocker)}>\n          {mockerStatus}\n        </div>)}\n      title={`${mocker.reqMethod} ${mocker.prefix}`}\n      style={{\n        marginBottom: '24px',\n        opacity: mocker.status === 'active' ? 1 : '.5'\n      }}\n      actions={[\n        <span></span>,\n        <span></span>,\n        <span></span>,\n        <span></span>,\n        <span></span>,\n        <span></span>,\n        <DeleteOutlined key='delete' onClick={() => {\n          if (!mocker.id) {\n            notifier.warning('MockerId not found', '');\n            return;\n          }\n          props.onDeleteBtnClick(mocker.id)\n        }}/>,\n        <EditOutlined key=\"edit\" onClick={() => {\n          if (!mocker.id) {\n            notifier.warning('MockerId not found', '');\n            return;\n          }\n          props.onEditBtnClick(mocker.id);\n        }}/>,\n      ]}>\n      <MockerTagWrapper>\n        <MockerTag>\n          <HttpStatusCode code={mocker.resStatus} />\n        </MockerTag>\n        <MockerTag>\n          <Tag>Mocker</Tag>\n        </MockerTag>\n        <MockerTag>\n          <Tag>{`ID  ${mocker.id}`}</Tag>\n        </MockerTag>\n      </MockerTagWrapper>\n      <MockerItemResBody>\n        <JSONBeautifier jsonStr={mocker.resBody} />\n      </MockerItemResBody>\n      {desc.split('\\n').map((str, i) => (\n        <span key={i}>\n          <Text type=\"secondary\">{str}</Text>\n          <br/>\n        </span>\n      ))}\n    </Card>\n  );\n}\n\nconst MockerTagWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst MockerTag = styled.span`\n  margin: 0 4px 0 0;\n`;\n\nconst MockerItemResBody = styled.div`\n  padding: 4px 0;\n`;\n\nexport default MockerItem;\n","import { Dispatch } from 'react';\nimport { listProxies } from '../api/proxies';\nimport { IProxy } from \"../interfaces/Proxy\";\n\nenum ProxiesActionType {\n  RefreshList,\n  UpdateProxy,\n  AddProxy,\n  RemoveProxy,\n}\n\ntype Action = {\n  type: ProxiesActionType.RefreshList;\n  payload: IProxy[];\n} | {\n  type: ProxiesActionType.UpdateProxy;\n  payload: IProxy;\n} | {\n  type: ProxiesActionType.AddProxy;\n  payload: IProxy;\n} | {\n  type: ProxiesActionType.RemoveProxy;\n  payload: { id: number }\n}\n\nexport type ProxyDispatcher = Dispatch<Action>\n\n// reducer create method\nexport function proxiesReducerInit(): IProxy[] {\n  return []\n}\n\nexport function proxiesReducer(origin: IProxy[], action: Action): IProxy[] {\n  switch (action.type) {\n    case ProxiesActionType.RefreshList:\n      if (!Array.isArray(action.payload)) {\n        return [];\n      }\n      return [...action.payload];\n    case ProxiesActionType.UpdateProxy:\n      return origin.map((m) => m.id === action.payload.id ? action.payload : m);\n    case ProxiesActionType.AddProxy:\n      return [action.payload, ...origin];\n    case ProxiesActionType.RemoveProxy:\n      return origin.filter((m) => m.id !== action.payload.id);\n    default:\n      throw new Error();\n  }\n}\n\n// operator methods\nexport function genRefreshProxiesAction(dispatch: ProxyDispatcher): () => Promise<void> {\n  return async () => {\n    const res = await listProxies();\n    dispatch({\n      type: ProxiesActionType.RefreshList,\n      payload: res.proxies\n    });\n  };\n}\n","import React from 'react'\nimport { IMocker, } from '../../interfaces/Mocker';\nimport MockerItem from './MockerItem';\nimport { MockerDispatcher } from '../../store/mockers';\n\ninterface Props {\n  mockers: IMocker[];\n  mockerDispatcher: MockerDispatcher;  \n  onEditBtnClick: (mockerId: number) => void;\n  onDeleteBtnClick: (mockerId: number) => void;\n}\n\nexport default function MockerList(props: Props) {\n  return (\n    <>\n      {props.mockers.map((m, i) => (\n        <MockerItem\n          key={i}\n          mocker={m}\n          onEditBtnClick={props.onEditBtnClick}\n          onDeleteBtnClick={props.onDeleteBtnClick}\n          mockerDispatcher={props.mockerDispatcher}/>\n      ))}\n    </>\n  )\n}\n","import axios from \"axios\";\nimport omit from 'lodash/omit'\nimport { notifier } from '../utils/notify'\nimport { config } from '../config';\nimport { IListProxyRes, IProxy, IUpdateProxyRes } from \"../interfaces/Proxy\";\n\nexport async function listProxies(): Promise<IListProxyRes> {\n  try {\n    const res = await axios.get(`${config.host}/api/proxy`)\n    return res.data\n  } catch (err) {\n    console.error(err);\n    notifier.error('list proxy failed', err.message)\n    return { proxies: [] };\n  }\n}\n\nexport async function updateProxy(p: IProxy): Promise<IUpdateProxyRes> {\n  try {\n    const res = await axios.put(`${config.host}/api/proxy/${p.id}`, { ...omit(p, 'id') })\n    return res.data\n  } catch (err) {\n    console.error('update proxy failed', err)\n    notifier.error('update proxy failed', err.message)\n    return {};\n  }\n}\n\nexport async function createProxy(p: IProxy): Promise<IUpdateProxyRes> {\n  try {\n    const res = await axios.post(`${config.host}/api/proxy`, { ...p })\n    return res.data\n  } catch (err) {\n    console.error('create proxy failed', err, JSON.stringify(err))\n    notifier.error('create proxy failed', err.message)\n    return {};\n  }\n}\n\nexport async function deleteProxy(id: number): Promise<boolean> {\n  try {\n    await axios.delete(`${config.host}/api/proxy/${id}`)\n    return true;\n  } catch (err) {\n    console.error('delete proxy failed', err, JSON.stringify(err))\n    notifier.error('delete proxy failed', err.message)\n    return false;\n  }\n}","import React from 'react';\nimport styled from 'styled-components'\nimport { Typography, Card, Tag } from 'antd'\nimport { IProxy } from '../../interfaces/Proxy';\nimport { EditOutlined, LoadingOutlined, DeleteOutlined } from '@ant-design/icons';\n\ninterface Props {\n  proxy: IProxy;\n}\n\nfunction ProxyItem(props: Props) {\n  const { Text } = Typography;\n  const { proxy } = props;\n  const desc = proxy.desc || 'This proxy doesn\\'t have any descriptions';\n\n  const proxyStatus = proxy.status === 'active'\n    ? <Text strong type='success'>Active</Text>\n    : proxy.status === 'inactive'\n      ? <Text>Inactive</Text>\n      : proxy.status === 'updating'\n        ? <LoadingOutlined style={{ fontSize: 13 }} spin />\n        : <Text type='danger'>unknown</Text>\n\n  return (\n    <Card\n      hoverable\n      bordered={false}\n      extra={(<div style={{ padding: '4px 12px' }}>{proxyStatus}</div>)}\n      title={`${proxy.reqMethod} ${proxy.prefix}`}\n      style={{\n        marginBottom: '24px',\n        opacity: proxy.status === 'active' ? 1 : '.5'\n      }}\n      actions={[\n        <span></span>,\n        <span></span>,\n        <span></span>,\n        <span></span>,\n        <span></span>,\n        <span></span>,\n        <DeleteOutlined key='delete' disabled />,\n        <EditOutlined key=\"edit\" disabled />,\n      ]}>\n      <ProxyTagWrapper>\n        <ProxyTag>\n          <Tag>Proxy</Tag>\n        </ProxyTag>\n        <ProxyTag>\n          <Tag>{`ID  ${proxy.id}`}</Tag>\n        </ProxyTag>\n      </ProxyTagWrapper>\n      {desc.split('\\n').map((str, i) => (\n        <span key={i}>\n          <Text type=\"secondary\">{str}</Text>\n          <br />\n        </span>\n      ))}\n    </Card>\n  );\n}\n\nconst ProxyTagWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`\n\nconst ProxyTag = styled.span`\n  margin: 0 4px 0 0;\n`;\n\nexport default ProxyItem;\n","import React from 'react'\nimport { IProxy, } from '../../interfaces/Proxy';\nimport ProxyItem from './ProxyItem';\n\ninterface Props {\n  proxies: IProxy[];\n}\n\nexport default function ProxyList(props: Props) {\n  return (\n    <>\n      {props.proxies.map((p, i) => (\n        <ProxyItem key={i} proxy={p} />\n      ))}\n    </>\n  )\n}\n","import React, { useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components'\nimport { PlusOutlined, RedoOutlined } from '@ant-design/icons';\nimport { Button, Divider, Row, Col } from 'antd'\nimport PageHeader from '../components/comm/PageHeader';\nimport MockerForm from '../components/mockers/MockerForm';\nimport MockerList from '../components/mockers/MockerList';\nimport { \n  genCreateMockersAction,\n  genDeleteMockersAction,\n  genRefreshMockersAction,\n  genUpdateMockersAction,\n  mockersReducer,\n  mockersReducerInit\n} from '../store/mockers';\nimport { IMocker } from '../interfaces/Mocker';\nimport { notifier } from '../utils/notify';\nimport { genRefreshProxiesAction, proxiesReducer, proxiesReducerInit } from '../store/proxies';\nimport ProxyList from '../components/proxies/ProxyList';\n\nconst DefaultMocker: IMocker = {\n  prefix: '', \n  reqMethod: 'GET',\n  resStatus: 200,\n  resBody: '',\n  desc: '',\n  createBy: 'AndrewChen',\n  status: 'active'\n}\n\ntype MockerFormState = {\n  visible: false;\n} |{\n  visible: true;\n  action: 'toCreate';\n} | {\n  visible: true;\n  action: 'toUpdate';\n  data: IMocker\n}\n\nfunction ProxyAndMockersPage() {\n  const [mockers, mockerDispatcher] = useReducer(mockersReducer, [], mockersReducerInit);\n  const [proxies, proxyDispatcher] = useReducer(proxiesReducer, [], proxiesReducerInit);\n  const [listLoading, setListLoading] = useState(false);\n  const refreshProxyAction = genRefreshProxiesAction(proxyDispatcher);\n  const refreshMockerAction = genRefreshMockersAction(mockerDispatcher);\n  const createMocker = genCreateMockersAction(mockerDispatcher);\n  const updateMocker = genUpdateMockersAction(mockerDispatcher);\n  const deleteMocker = genDeleteMockersAction(mockerDispatcher);\n  const [mockerFormState, setMockerFormState] = useState<MockerFormState>({ visible: false });\n\n\n  useEffect(() => {\n    if (mockers.length === 0) {\n      setListLoading(true)\n      setTimeout(() => { \n        refreshMockerAction()\n        refreshProxyAction()\n        setListLoading(false)\n      }, 800)\n    }\n  }, [mockers.length, refreshMockerAction, refreshProxyAction]);\n\n\n  return (\n    <Container>\n      <PageHeader title='Proxy & Mockers'/>\n      <ControlPanel>\n        <Button\n          type='primary'\n          shape='circle'\n          icon={<PlusOutlined />}\n          onClick={() => setMockerFormState({ visible: true, action: 'toCreate' })}>\n        </Button>\n        <Button\n          shape='circle'\n          loading={listLoading}\n          icon={<RedoOutlined />}\n          onClick={async () => {\n            setListLoading(true)\n            await refreshMockerAction();\n            await refreshProxyAction();\n            setTimeout(() => setListLoading(false), 650);\n          }}>\n        </Button>\n      </ControlPanel>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Divider orientation=\"left\">Mockers</Divider>\n          <MockerList\n            mockers={mockers}\n            onDeleteBtnClick={deleteMocker}\n            onEditBtnClick={(mockerId: number) => {\n              const target = mockers.find((m) => m.id === mockerId)\n              if (!target) {\n                notifier.warning('Start editor failed', `Mocker ${mockerId} not found`);\n                return;\n              }\n              setMockerFormState({\n                visible: true,\n                action: 'toUpdate',\n                data: target\n              })\n            }}\n            mockerDispatcher={mockerDispatcher}/>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Divider orientation=\"left\">Proxies</Divider>\n          <ProxyList proxies={proxies}/>\n        </Col>\n      </Row>\n      {mockerFormState.visible && (\n        <MockerForm\n          action={mockerFormState.action}\n          visible={mockerFormState.visible}\n          data={(\n            mockerFormState.action === 'toUpdate' ? mockerFormState.data : { ...DefaultMocker }\n          )}\n          onClose={() => setMockerFormState({ visible: false })}\n          onComplete={async (data) => {\n            let success: boolean = false;\n            if (mockerFormState.action === 'toCreate') {\n              success = await createMocker({\n                prefix: data.prefix,\n                reqMethod: data.reqMethod,\n                resStatus: data.resStatus,\n                resBody: data.resBody,\n                desc: data.desc,\n                createBy: data.createBy,\n                status: data.status\n              });\n            }\n            else if (mockerFormState.action === 'toUpdate') {\n              success = await updateMocker({\n                id: data.id,\n                prefix: data.prefix,\n                reqMethod: data.reqMethod,\n                resStatus: data.resStatus,\n                resBody: data.resBody,\n                desc: data.desc,\n                createBy: data.createBy,\n                status: data.status\n              });\n            }\n            if (success) {\n              setMockerFormState({ visible: false })\n            }\n          }}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  padding: 0 0 0 24px;\n`;\n\nconst ControlPanel = styled.div`\n  display: flex;\n  width: 200px;\n  justify-content: flex-start;\n\n  > * {\n    margin-right: 12px;\n  }\n`;\n\nexport default ProxyAndMockersPage;\n","import React from 'react';\nimport styled from 'styled-components'\nimport { Layout } from 'antd';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Menu from './components/comm/Menu';\nimport NavBar from './components/comm/NavBar';\nimport HomePage from './pages/DocumentPage';\nimport ProxyAndMockersPage from './pages/ProxyAndMockersPage';\nimport './App.css';\n\nfunction App() {\n\n  const {Sider, Content, Footer} = Layout\n\n  return (\n    <Container className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/admin\">\n            <HomePage />\n          </Route>\n          <Route path=\"/\">\n            <Layout>\n              <NavBar />\n              <Layout>\n                <Sider width={256}>\n                  <Menu />\n                </Sider>\n                <Content>\n                  <Switch>\n                    <Route exact path=\"/admin/routes\">\n                      <ProxyAndMockersPage />\n                    </Route>\n                  </Switch>\n                  <Footer>Made by AndrewChen</Footer>\n                </Content>\n              </Layout>\n            </Layout>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  padding: 0;\n  margin: 0;\n  font-size: .9em;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\" !important; // ??\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}